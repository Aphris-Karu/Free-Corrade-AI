> object insinfo perl
use DBI;
my $rs = shift @_;
my $object = shift @_;
my $info = join " ", @_;
my $dbh;
my $it = "";
my @row_ary;
my $dbname = $ENV{'DBNAME'} || "stonerai";
my $host = $ENV{'DBSRV'} || "docker6";
my $port = $ENV{'DBPORT'} || "5432";
my $username = $ENV{'DBUSER'} || "postgres";
my $password = $ENV{'DBPASSWD'} || "rrttyy";

$dbh = DBI->connect("dbi:Pg:dbname=$dbname;host=$host;port=$port",
                    $username,
                    $password,
                    {AutoCommit => 0, RaiseError => 1, PrintError => 0}
                   );
my $sql = "INSERT INTO information (object, info) VALUES ('$object', '$info')";
my $sth = $dbh->prepare($sql) or die $dbh->errstr;
$sth->execute() or die $dbh->errstr;
$dbh->commit();
my $rv = $dbh->disconnect;
$it = "Done";
return $it;
< object

> object infodb perl
use DBI;
my ($rs, $args) = @_;
my $dbh;
my $it = "";
my @row_ary;
my $string = $args;
my $dbname = $ENV{'DBNAME'} || "stonerai";
my $host = $ENV{'DBSRV'} || "docker6";
my $port = $ENV{'DBPORT'} || "5432";
my $username = $ENV{'DBUSER'} || "postgres";
my $password = $ENV{'DBPASSWD'} || "rrttyy";

$dbh = DBI->connect("dbi:Pg:dbname=$dbname;host=$host;port=$port",
                    $username,
                    $password,
                    {AutoCommit => 0, RaiseError => 1, PrintError => 0}
                   );
my $sql = "SELECT (info) FROM information WHERE object = \'$string\' ORDER BY random() LIMIT 1";
@row_ary = $dbh->selectrow_array($sql);
$it = $row_ary[0];
#if ( $it eq "" ) { return "not"; };
if ( defined $it ){
chomp $it;
my $rv = $dbh->disconnect;
return $it;
} else { return "not"; };
< object


> object database perl
use DBI;
my ($rs, $args) = @_;
my $dbh;
my $it = "";
my @row_ary;
my $string = $args;
my $dbname = $ENV{'DBNAME'} || "stonerai";
my $host = $ENV{'DBSRV'} || "docker6";
my $port = $ENV{'DBPORT'} || "5432";
my $username = $ENV{'DBUSER'} || "postgres";
my $password = $ENV{'DBPASSWD'} || "rrttyy";

$dbh = DBI->connect("dbi:Pg:dbname=$dbname;host=$host;port=$port",
                    $username,
                    $password,
                    {AutoCommit => 0, RaiseError => 1, PrintError => 0}
                   );
my $sql = "SELECT (definition) FROM words WHERE word = \'$string\' ORDER BY random() LIMIT 1";
@row_ary = $dbh->selectrow_array($sql);
$it = $row_ary[0];
if ( $it eq "" ) { return "not a word I know."; };
if ( $it ne "" ) {
chomp $it;
my $rv = $dbh->disconnect;
return $it;
}
< object

> object joke perl
srand;
my $it;
open FILE, "lists/jokes.txt" or die "Could not open filename: $!\n";
rand($.) < 1 && ($it = $_) while <FILE>;
close FILE;
chomp $it;
return $it;
< object

> object wisdom perl
srand;
my $it = "";
open FILE, "lists/wisdom.txt" or die "Could not open filename: $!\n";
rand($.) < 1 && ($it = $_) while <FILE>;
close FILE;
if ( $it eq "" ) { return "Nothing new"; };
if ( $it ne "" ) {
chomp $it;
return $it;
}
< object

> object capitol perl
no warnings 'uninitialized';
my $Capitol ="";
my $state ="";
my ($rs, $args) = @_;
my $string = $args;
open(F,"lists/capitols.txt");
my @list=<F>;close F;
my @f=grep (/$string:/i, @list);
if ( $f[0] ne "" ) {($state, $Capitol)=split(":", $f[0]);}
if ( $Capitol eq "" ) 
{
return "not something I know.";
}else{
chomp $Capitol;
return $Capitol;
}
< object

> object iq perl
my $iq = `free | grep Mem: | awk '{print \$4}'`;
chomp($iq);
return $iq;
< object

> object time perl
my $time = `export TZ="America/Los_Angeles"; date +%r`;
chomp($time);
return $time;
< object

> object date perl
my $date = `export TZ="America/Los_Angeles"; date +"%A %b %d %Y"`;
chomp($date);
return $date;
< object

+ [*] time [*]
- /me smiles and says "It is <call>time</call> SLT"
- /me giggles and says "Time for you to get a watch?" Its <call>time</call> SLT
- Does Anybody really know what Time it is?  Its <call>time</call> SLT

+ what is [*] (day|date|today) [*]
- /me giggles and says "It's <call>date</call>"

+ what is your iq
- Currently it is <call>iq</call> kb

+ what does * mean
- <star> is <call>database <star></call>

+ * what * means
- <star2> is <call>database <star2></call>

+ * (define|definition of) _
- hmmm <star2>  is... <call>database <star2></call>

+ * meaning of * [*]
- <star2> is <call>database <star3></call>

+ (who|what) is [a|the] _
- <set remember=<call>infodb <star2></call>><set info=<star2>> {@inforeply}

+ what do you know about _
- <set remember=<call>infodb <star></call>><set info=<star>> {@inforeply}

+ inforeply
* <get remember> != not => {random}
^ <get info> is <get remember>|
^ I was told that <get info> is <get remember>|
^ I think that <get info> is <get remember>|
^ smiles and says "<get info> is <get remember>"|
^ <get info> is <get remember>|
^ hmmm someone told me that <get info> is <get remember>{/random}
- I dont know
- smiles and says "No one has told me yet"
- giggles and says "I dont know"
- I have no idea.

+ what * capitol of *
- The Capitol of "<star2>" is <call>capitol <star2></call>.

+ * a [*] joke
- <call>joke</call>

+ [*] something funny [*]
- <call>joke</call>

+ what * (learn|learned) [*]
- <call>wisdom</call>
 
+ what is a _
- <star2> is <call>database <star2></call>

+ expansion rate * universe
- /me smiles and says 74.3 kilometers per second.

+ how fast is the universe expanding [*]
- /me smiles and says 74.3 kilometers per second.

+ remember [a|the|that] _ is *
- <call>insinfo <star> <star2></call>, Ill remember that!
- Adding to my knoweldge base <call>insinfo <star> <star2></call>!
- /me smiles and says "<call>insinfo <star> <star2></call>, Ill remember it"
